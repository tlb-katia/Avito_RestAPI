// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Tender Management API
 *
 * API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).
 *
 * API version: 1.0
 */

package openapi

import (
	"errors"
)

// Tender - Информация о тендере
type Tender struct {

	// Уникальный идентификатор тендера, присвоенный сервером.
	Id string `json:"id"`

	// Полное название тендера
	Name string `json:"name"`

	// Описание тендера
	Description string `json:"description"`

	Status TenderStatus `json:"status"`

	ServiceType TenderServiceType `json:"serviceType"`

	// Уникальный идентификатор организации, присвоенный сервером.
	OrganizationId string `json:"organizationId,omitempty"`

	// Номер версии посел правок
	Version int32 `json:"version"`

	// Серверная дата и время в момент, когда пользователь отправил тендер на создание. Передается в формате RFC3339.
	CreatedAt string `json:"createdAt"`
}

// AssertTenderRequired checks if the required fields are not zero-ed
func AssertTenderRequired(obj Tender) error {
	elements := map[string]interface{}{
		"id":             obj.Id,
		"name":           obj.Name,
		"description":    obj.Description,
		"serviceType":    obj.ServiceType,
		"status":         obj.Status,
		"organizationId": obj.OrganizationId,
		"version":        obj.Version,
		"createdAt":      obj.CreatedAt,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertTenderConstraints checks if the values respects the defined constraints
func AssertTenderConstraints(obj Tender) error {
	if obj.Version < 1 {
		return &ParsingError{Param: "Version", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
