// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Tender Management API
 *
 * API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).
 *
 * API version: 1.0
 */

package openapi

import (
	"errors"
)

// Bid - Информация о предложении
type Bid struct {

	// Уникальный идентификатор предложения, присвоенный сервером.
	Id string `json:"id"`
  
	// Полное название предложения
	Name string `json:"name"`
  
	// Описание предложения
	Description string `json:"description,omitempty"`
  
	Status BidStatus `json:"status"`
  
	// Уникальный идентификатор тендера, присвоенный сервером.
	TenderId string `json:"tenderId,omitempty"`
  
	AuthorType BidAuthorType `json:"authorType"`
  
	// Уникальный идентификатор автора предложения, присвоенный сервером.
	AuthorId string `json:"authorId"`
  
	// Номер версии посел правок
	Version int32 `json:"version"`
  
	// Серверная дата и время в момент, когда пользователь отправил предложение на создание. Передается в формате RFC3339.
	CreatedAt string `json:"createdAt"`
  }
  

// AssertBidRequired checks if the required fields are not zero-ed
func AssertBidRequired(obj Bid) error {
	elements := map[string]interface{}{
		"id":          obj.Id,
		"name":        obj.Name,
		"description": obj.Description,
		"status":      obj.Status,
		"tenderId":    obj.TenderId,
		"authorType":  obj.AuthorType,
		"authorId":    obj.AuthorId,
		"version":     obj.Version,
		"createdAt":   obj.CreatedAt,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBidConstraints checks if the values respects the defined constraints
func AssertBidConstraints(obj Bid) error {
	if obj.Version < 1 {
		return &ParsingError{Param: "Version", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
