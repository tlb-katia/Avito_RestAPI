// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Tender Management API
 *
 * API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).
 *
 * API version: 1.0
 */

package openapi

import (
	"fmt"
)

// TenderStatus : Статус тендер
type TenderStatus string

// List of TenderStatus
const (
	CREATED   TenderStatus = "Created"
	PUBLISHED TenderStatus = "Published"
	CLOSED    TenderStatus = "Closed"
)

// AllowedTenderStatusEnumValues is all the allowed values of TenderStatus enum
var AllowedTenderStatusEnumValues = []TenderStatus{
	"Created",
	"Published",
	"Closed",
}

// validTenderStatusEnumValue provides a map of TenderStatuss for fast verification of use input
var validTenderStatusEnumValues = map[TenderStatus]struct{}{
	"Created":   {},
	"Published": {},
	"Closed":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TenderStatus) IsValid() bool {
	_, ok := validTenderStatusEnumValues[v]
	return ok
}

// NewTenderStatusFromValue returns a pointer to a valid TenderStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTenderStatusFromValue(v string) (TenderStatus, error) {
	ev := TenderStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for TenderStatus: valid values are %v", v, AllowedTenderStatusEnumValues)
}

// AssertTenderStatusRequired checks if the required fields are not zero-ed
func AssertTenderStatusRequired(obj TenderStatus) error {
	return nil
}

// AssertTenderStatusConstraints checks if the values respects the defined constraints
func AssertTenderStatusConstraints(obj TenderStatus) error {
	return nil
}
